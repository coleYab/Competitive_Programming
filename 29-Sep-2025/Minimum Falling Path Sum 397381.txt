# Problem: Minimum Falling Path Sum - https://leetcode.com/problems/minimum-falling-path-sum/

class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n = matrix.size();
        vector<vector<int>> dp = matrix;

        for (int i = 1; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int best = dp[i-1][j];
                if (j > 0) best = min(best, dp[i-1][j-1]);
                if (j < n-1) best = min(best, dp[i-1][j+1]);
                dp[i][j] += best;
            }
        }

        return *min_element(dp[n-1].begin(), dp[n-1].end());
    }
};
