# Problem: Champagne Tower - https://leetcode.com/problems/champagne-tower/

class Solution {
public:
    double champagneTower(int poured, int qr, int ql) {
        int mx = 301;
        vector<vector<double>> dp(mx, vector<double>(mx, 0.0));
        dp[0][0] = (double)poured;
        
        for (int i = 0; i < mx - 1; i++) {
            for (int j = 0; j <= i; j++) {
                if (dp[i][j] > 1) {
                    double overflow = (dp[i][j] - 1.0) / 2.0;
                    dp[i + 1][j]     += overflow;
                    dp[i + 1][j + 1] += overflow;
                    dp[i][j] = 1.0; 
                }
            }
        }

        return min(1.0, dp[qr][ql]);
    }
};