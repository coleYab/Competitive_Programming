# Problem: Best Time to Buy and Sell Stock with Cooldown - https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/

class Solution {
public:
    int maxProfit(vector<int>& a) {
        int n = a.size();
        vector<vector<int>> dp(n, vector<int>(2, -1));

        auto dfs = [&](auto &&self, int idx, bool ok) {
            if (idx >= n) return 0;
            int ans = 0;
            if (dp[idx][ok] != -1) return dp[idx][ok];
            if (ok) {
                ans = max(self(self, idx + 1, false) - a[idx], self(self, idx + 1, true));
            } else {
                ans = max(self(self, idx + 2, true) + a[idx], self(self, idx + 1, false));
            }
            return dp[idx][ok] = max(ans, 0);
        };

        return dfs(dfs, 0, true);
    }
};